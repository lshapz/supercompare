{"ast":null,"code":"var _jsxFileName = \"/Users/laurashapiro/Downloads/Take-Home-Test-2020-02-26/superfront/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Context from './Context';\nimport allSupers from './assets/characters-corrupt.json';\nimport Supershow from './components/Supershow';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = newData => {\n      this.setState(state => ({\n        data: newData\n      }));\n    }; // State also contains the updater function so it will\n    // be passed down into the context provider\n\n\n    this.state = {\n      data: {},\n      getData: this.getData\n    };\n  }\n\n  componentDidMount() {\n    this.getData(allSupers);\n  }\n\n  render() {\n    // The entire state is passed to the provider\n    return React.createElement(Context.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, allSupers.map((value, index) => {\n      return React.createElement(Supershow, {\n        id: value.id,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/laurashapiro/Downloads/Take-Home-Test-2020-02-26/superfront/src/App.js"],"names":["React","Context","allSupers","Supershow","App","Component","constructor","props","getData","newData","setState","state","data","componentDidMount","render","map","value","index","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AAEA,SAAKC,OAAL,GAAgBC,OAAD,IAAa;AAC1B,WAAKC,QAAL,CAAcC,KAAK,KAAK;AACtBC,QAAAA,IAAI,EAAEH;AADgB,OAAL,CAAnB;AAGD,KAJD,CAHiB,CASjB;AACA;;;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXJ,MAAAA,OAAO,EAAE,KAAKA;AAFH,KAAb;AAID;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,OAAL,CAAaN,SAAb;AACH;;AAEDY,EAAAA,MAAM,GAAG;AACP;AAEA,WACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKH,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGT,SAAS,CAACa,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAgB;AAC7B,aAAO,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAED,KAAK,CAACE,EAArB;AAAyB,QAAA,GAAG,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CAFH,CADF;AASD;;AAlC+B;;AAoClC,eAAeb,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Context from './Context';\nimport allSupers from './assets/characters-corrupt.json'; \nimport Supershow from './components/Supershow';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.getData = (newData) => {\n      this.setState(state => ({\n        data: newData\n      }));\n    };\n\n    // State also contains the updater function so it will\n    // be passed down into the context provider\n    this.state = {\n      data: {},\n      getData: this.getData,\n    };\n  }\n\n  componentDidMount() {\n      this.getData(allSupers);\n  }\n\n  render() {\n    // The entire state is passed to the provider\n\n    return (\n      <Context.Provider value={this.state}>\n        \n        {allSupers.map((value, index)=>{\n          return <Supershow id={value.id} key={index} />\n        })} \n\n      </Context.Provider>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}