{"ast":null,"code":"var _jsxFileName = \"/Users/laurashapiro/Downloads/Take-Home-Test-2020-02-26/superfront/src/components/ShowAll.js\";\nimport React from 'react';\nimport '../index.css';\nimport MyContext from '../Context';\nimport Supershow from './Supershow';\n\nclass ShowAll extends React.Component {\n  render() {\n    let allSupers = this.context.data; // let goodGuys = allSupers.filter(item=> \n    //   item.biography.alignment && item.biography.alignment.toLowerCase() === \"good\");\n    // let badGuys = allSupers.filter(item=> item.biography.alignment && item.biography.alignment.toLowerCase() === \"bad\");\n    // let unknownGuys =  allSupers.filter(item=> !item.biography.alignment);\n\n    let sorter = (a, b) => {\n      if (a > b) {\n        return 1;\n      }\n\n      if (b > a) {\n        return -1;\n      }\n\n      return 0;\n    };\n\n    let alphaSupers = allSupers.sort((a, b) => {\n      if (a.name && b.name) {\n        return sorter(a.name, b.name);\n      } else if (!a.name && b.name) {\n        return sorter(a.biography.fullName, b.name);\n      } else {\n        return sorter(a.biography.fullName, b.biography.fullName);\n      }\n    }); // let alphaSupers = goodGuys.sort((a,b)=>{\n    //   if (a.name && b.name) {\n    //     return sorter(a.name, b.name)\n    //   } else if (!a.name && b.name) {\n    //     return sorter(a.biography.fullName, b.name)\n    //   } else {\n    //     return sorter(a.biography.fullName, b.biography.fullName)\n    //   }\n    // })\n    // // let alphaVillains = badGuys.sort((a,b)=>{\n    // //   if (a.name && b.name) {\n    // //     return sorter(a.name, b.name)\n    // //   } else if (!a.name && b.name) {\n    // //     return sorter(a.biography.fullName, b.name)\n    // //   } else {\n    // //     return sorter(a.biography.fullName, b.biography.fullName)\n    // //   }\n    // // })\n    // // let alphaRest = unknownGuys.sort((a,b)=>{\n    // //   if (a.name && b.name) {\n    // //     return sorter(a.name, b.name)\n    // //   } else if (!a.name && b.name) {\n    // //     return sorter(a.biography.fullName, b.name)\n    // //   } else {\n    // //     return sorter(a.biography.fullName, b.biography.fullName)\n    // //   }\n    // // })\n\n    let supers = alphaSupers.map((value, index) => {\n      return React.createElement(Supershow, {\n        id: value.id,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }); // let villains = alphaVillains.map((value, index)=>{\n    //   return <Supershow id={value.id} key={index} />\n    // })\n    // let unknown = alphaRest.map((value, index)=>{\n    //   return <Supershow id={value.id} key={index} />\n    // })\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, supers));\n  }\n\n}\n\nShowAll.contextType = MyContext;\nexport default ShowAll;","map":{"version":3,"sources":["/Users/laurashapiro/Downloads/Take-Home-Test-2020-02-26/superfront/src/components/ShowAll.js"],"names":["React","MyContext","Supershow","ShowAll","Component","render","allSupers","context","data","sorter","a","b","alphaSupers","sort","name","biography","fullName","supers","map","value","index","id","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAGpCC,EAAAA,MAAM,GAAG;AAEP,QAAIC,SAAS,GAAG,KAAKC,OAAL,CAAaC,IAA7B,CAFO,CAIP;AACA;AACA;AACA;;AAGA,QAAIC,MAAM,GAAG,CAACC,CAAD,EAAGC,CAAH,KAAQ;AACnB,UAAID,CAAC,GAAGC,CAAR,EAAW;AACT,eAAO,CAAP;AACD;;AACD,UAAIA,CAAC,GAAGD,CAAR,EAAW;AACT,eAAO,CAAC,CAAR;AACD;;AACD,aAAO,CAAP;AACD,KARD;;AAUA,QAAIE,WAAW,GAAGN,SAAS,CAACO,IAAV,CAAe,CAACH,CAAD,EAAGC,CAAH,KAAO;AACpC,UAAID,CAAC,CAACI,IAAF,IAAUH,CAAC,CAACG,IAAhB,EAAsB;AACtB,eAAOL,MAAM,CAACC,CAAC,CAACI,IAAH,EAASH,CAAC,CAACG,IAAX,CAAb;AACC,OAFD,MAEO,IAAI,CAACJ,CAAC,CAACI,IAAH,IAAWH,CAAC,CAACG,IAAjB,EAAuB;AAC9B,eAAOL,MAAM,CAACC,CAAC,CAACK,SAAF,CAAYC,QAAb,EAAuBL,CAAC,CAACG,IAAzB,CAAb;AACC,OAFM,MAEA;AACP,eAAOL,MAAM,CAACC,CAAC,CAACK,SAAF,CAAYC,QAAb,EAAuBL,CAAC,CAACI,SAAF,CAAYC,QAAnC,CAAb;AACC;AAEJ,KATiB,CAAlB,CApBO,CA+BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAIC,MAAM,GAAGL,WAAW,CAACM,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,KAAgB;AAC3C,aAAO,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAED,KAAK,CAACE,EAArB;AAAyB,QAAA,GAAG,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFY,CAAb,CAhEO,CAoEP;AACA;AACA;AAEA;AACA;AACA;;AAEA,WAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,MADH,CAFA,CAHJ;AAkBD;;AAjGmC;;AAmGtCd,OAAO,CAACmB,WAAR,GAAsBrB,SAAtB;AACA,eAAeE,OAAf","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport MyContext from '../Context';\nimport Supershow from './Supershow';\nclass ShowAll extends React.Component {\n\n\n  render() {\n    \n    let allSupers = this.context.data;\n\n    // let goodGuys = allSupers.filter(item=> \n    //   item.biography.alignment && item.biography.alignment.toLowerCase() === \"good\");\n    // let badGuys = allSupers.filter(item=> item.biography.alignment && item.biography.alignment.toLowerCase() === \"bad\");\n    // let unknownGuys =  allSupers.filter(item=> !item.biography.alignment);\n\n\n    let sorter = (a,b) =>{\n      if (a > b) {\n        return 1\n      }\n      if (b > a) {\n        return -1\n      }\n      return 0\n    }\n\n    let alphaSupers = allSupers.sort((a,b)=>{\n        if (a.name && b.name) {\n        return sorter(a.name, b.name)\n        } else if (!a.name && b.name) {\n        return sorter(a.biography.fullName, b.name)\n        } else {\n        return sorter(a.biography.fullName, b.biography.fullName)\n        }\n\n    })\n\n    // let alphaSupers = goodGuys.sort((a,b)=>{\n    //   if (a.name && b.name) {\n    //     return sorter(a.name, b.name)\n    //   } else if (!a.name && b.name) {\n    //     return sorter(a.biography.fullName, b.name)\n    //   } else {\n    //     return sorter(a.biography.fullName, b.biography.fullName)\n    //   }\n\n    // })\n\n    // // let alphaVillains = badGuys.sort((a,b)=>{\n    // //   if (a.name && b.name) {\n    // //     return sorter(a.name, b.name)\n    // //   } else if (!a.name && b.name) {\n    // //     return sorter(a.biography.fullName, b.name)\n    // //   } else {\n    // //     return sorter(a.biography.fullName, b.biography.fullName)\n    // //   }\n\n    // // })\n\n    // // let alphaRest = unknownGuys.sort((a,b)=>{\n    // //   if (a.name && b.name) {\n    // //     return sorter(a.name, b.name)\n    // //   } else if (!a.name && b.name) {\n    // //     return sorter(a.biography.fullName, b.name)\n    // //   } else {\n    // //     return sorter(a.biography.fullName, b.biography.fullName)\n    // //   }\n\n    // // })\n\n    let supers = alphaSupers.map((value, index)=>{\n      return <Supershow id={value.id} key={index} />\n    })\n\n    // let villains = alphaVillains.map((value, index)=>{\n    //   return <Supershow id={value.id} key={index} />\n    // })\n\n    // let unknown = alphaRest.map((value, index)=>{\n    //   return <Supershow id={value.id} key={index} />\n    // })\n\n    return (\n        \n\n        <div className=\"container\"> \n\n        <div className=\"\"> \n          {supers}\n        </div> \n        {/* <div className=\"subContainer\"> \n          {villains}\n        </div>\n        <div className=\"subContainer\"> \n          {unknown} \n          \n        </div> */}\n        </div>\n  \n    );\n  }\n}\nShowAll.contextType = MyContext;\nexport default ShowAll;\n"]},"metadata":{},"sourceType":"module"}